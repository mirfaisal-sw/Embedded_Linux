Introduction: -
------------------
By using tmux tool, we can divide or spilt terminals in to various horizontal and vertical panes
as well as we can create new window. We can switch to splitted terminals and windows using tmux.

Compnents created by tmux for working are: -
	Panes, Windows, Sessions

Reference: -
-------------
https://www.youtube.com/watch?v=FAU8rmS5NSE&list=PLT98CRl2KxKGiyV1u6wHDV8VwcQdzfuKe&index=4
https://tmuxcheatsheet.com/

Install tmux: -
------------------
	#sudo apt install tmux

Usage: -
-------------
a) Start tmux shell: -
	#tmux 
	
b) To split terminal Horizontally: -
   	Press CTRL + B key, release it and then immediately press " (double quote).
	Note - to press double quote key one have to use SHIFT key as well.
	
c) To split terminal Vertically: -
	Press CTRL + B key, release it and then immediately press % (percent).	

d) To delete or close the child terminal: -
	Press CTRL + D key.
	
e) Suppose any splitted terminal we want to zoom, then do as below.
	Press CTRL + B, followed by key Z.
	To return back to original, do the same i.e. CTRL + B, followed by Z (zee) key.

f) If we keep on creating teminal splits, then it will become messy, so in this case we
   we can create new window.
   To create new window -> CTRL+B, c
   To come back to previous window -> CTRL+B, p
   
   To kill a window -> CTRL+B, &
   
   Renaming a window: -
   If we are working on multiple windows, then it is hard to remember on which window what work is 
   going on, for this we can give certain identifier or name to window. Fow this, do as below.
   
   Press CTRL+B and then press , (comma)
   Then we can rename window's name.
   
g) Detaching from tmux session: -
	Suppose we are working on tmux session having muyltiple splits, now we want to come to normal 
	shell, then in that case we can detach from tmux shell.
	For this we can press CTRL+B, d
	
	" d for detach"
	
h) Attaching to tmux sessions: -
	Suppose we have created one or more tmux sessions, by running tmux command (i.e. #tmux <-|) and 
	also we are detached from tmux sessions.
	Now, we can attach to a tmux session back. For this first we may need to know list of sessions to 
	which to attach. So, for this we will use command as below.
	#tmux list-sessions	
		or	
	#tmux ls       /*short form*/
	O/p - 
		0: 2 windows (created Sun Aug 14 15:12:45 2022) [205x51]
		1: 1 windows (created Sun Aug 14 15:17:38 2022) [205x51]
	
	Hence, for example there are two tmux sessions 0 and 1 currently running. 
	Now, to attach back to a tmux session, we can use below command.
	
	#tmux attach -t <session_id>
	Ex - #tmux attach -t 1
	
i) Rename a session: -
	We can rename a session to meaningful identifier. For this we have to attach to a session which is
	to be renamed. Then we use below key sequence to rename.
	
	CTRL+B, $
	Now, type meaningful name, for example - kernel_program
	
	So, if we are detached and want to attach, then instead of using session ID we can use session name.
	For example: -
	#tmux attach -t kernel_program
		or
	#tmux a -t kernel_program    /*short form*/
	
j) Create a new tmux session along with session name.
	#tmux new -s <my_session_name>
	
k) Scroll among sessions: -
	If we are working on multiple sessions, then to make multitasking easier, we can scroll among sessions, 
	for this there is a wau by which we can easily select among sessions, by chosing a session from the list
	(obtained by below key sequence) using UP and Down arrow key and pressing Enter.
	
	CTRL + B, s
	
l) Toggle between current and previous pane: -
	CTRL+B, ;

m) Killing tmux session: -
	1. #tmux kill-session -t <my_session>
		It kills only "my_session" provided in the command.
		
	2. #tmux kill-session -a
		It kills all the sessions except the current one.
		
	3. #tmux kill-session -a -t <my_session>
		It kills all the sessions except "my_session".
	
n) As we can see tmux needs a lot of key sequences, which involves multiple finger usage as well as hard to remember.
   To make it pretty easier, there is a file called .tmux.conf which resides in home directory. If this file is not there
   then create one and add the contents of this file as below.
   #vim ~/.tmux.conf
   (Add below lines to this)
   	# Send prefix, use CTRL+a key as prefix
	set-option -g prefix C-a
	unbind-key C-a
	bind-key C-a send-prefix

	# Use Alt-arrow keys to switch panes
	bind -n M-Left select-pane -L
	bind -n M-Right select-pane -R
	bind -n M-Up select-pane -U
	bind -n M-Down select-pane -D

	# Shift+Left or Shift+Right Arrow to switch windows
	bind -n S-Left previous-window
	bind -n S-Right next-window

	# Mouse mode, to select a pane or window or to resize it.
	is_pre_2_1="[[ $(tmux -V | cut -d' ' -f2) < 2.1 ]] && echo true || echo false"
	if-shell "$is_pre_2_1" "setw -g mode-mouse on; set -g mouse-resize-pane on;\
      	set -g mouse-select-pane on; set -g mouse-select-window on" "set -g mouse on"

	# Set easier window split keys
	# Ctrl+a, v for vertical and Ctrl+a, h for horizontal split.
	bind-key v split-window -h
	bind-key h split-window -v

	# Easy config reload
	bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."
	
After adding the above contents in file ".tmux.conf", we can get following shortcuts: -
	1. Use the prefix as "CTRL+a".
	2. Use ALT+Arrow keys to move between different panes.
	3. Use SHIFT+Arrow keys to move between windows.
	4. Use Ctrl+a, v for vertical split and Ctrl+a, h for horizontal split.
	5. Use Mouse for selecting a Pane or a Window and to resize them by sliding the cursor
	   on lines.
	   
Note - If we do some change on .tmux.conf file, then to signal the change, we can run below 
	command.
	#tmux source-file ~/.tmux.conf
	
   
   

