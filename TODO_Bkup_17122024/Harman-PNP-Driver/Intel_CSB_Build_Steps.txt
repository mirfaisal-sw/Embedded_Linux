

==================================
Sync Code base
==================================
mkdir intel_lts
cd  intel_lts
git clone ssh://mirfaisal@gerrit1.harman.com:29418/GTC_Foundation_Software/Development/Kernel/BSP/Linux/vanilla-apollo-lake-lts && scp -p -P 29418 mirfaisal@gerrit1.harman.com:hooks/commit-msg vanilla-apollo-lake-lts/.git/hooks/
git checkout â€“b Elina_Stable_CW2019 origin/Elina_Stable_CW2019

============================================
Install SDK
============================================
-> cd SDK Insatlled path
-> source environment....
-> which cmake
->
export PATH=$PATH:/data/home/mirfaisal/Intel_SDK_2/SDK_Intel_Installed_Path/sysroots/x86_64-elinasdk-linux/usr/bin/x86_64-elina-linux
export ARCH=x86_64
export CROSS_COMPILE=x86_64-elina-linux-

==============================================
Steps to build Application kernel
==============================================
make apl_x86_64_ntg7_abl_secure_defconfig
make -j4 bzImage

make -j12 modules
make INSTALL_MOD_PATH=/data/home/mirfaisal/Intel_CSB_Src_2/intel_lts/vanilla-apollo-lake-lts/My_Modules_18042022 modules_install


make INSTALL_MOD_PATH=/path/to/target modules_install

==============================================
Application kernel Stitching for UNSECURE ABL
==============================================
./ias_image_app -i 0x30300 -o iasImage cmdline_applinux_ntg7.txt arch/x86/boot/bzImage

==============================================
Signing kernel Image for Secure ABL
==============================================

openssl dgst -binary -sha256 -out iasImage.hash iasImage
openssl pkeyutl -in iasImage.hash -out iasImage.sig -sign -inkey private_key.pem -pkeyopt digest:sha256
openssl rsa -pubout -in private_key.pem -out publickey.pem
./ias_image_app -s iasImage.sig -k publickey.pem -i 0x30300 iasImage -o iasImage_se
  
# iasImage_se is signed kernel image that can used in secure AB





